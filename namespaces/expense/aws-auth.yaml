apiVersion: v1
data:
  mapRoles: |
    - groups:
      - system:bootstrappers
      - system:nodes
      rolearn: arn:aws:iam::533267402752:role/eksctl-expense-8-nodegroup-expense      -NodeInstanceRole-xOqfqEaZdSm7
      username: system:node:{{EC2PrivateDNSName}}
  mapUsers: |
    - groups:
      - expense:expense-pod-reader
      userarn: arn:aws:iam::533267402752:user/harish
      username: admin
kind: ConfigMap
metadata:
  creationTimestamp: "2024-10-29T07:58:12Z"
  name: aws-auth
  namespace: kube-system
  uid: 0f6667bc-ab54-4e14-ab8c-2e4220cb7704 #dont delete this
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # "namespace" omitted since ClusterRoles are not namespaced
  name: expense-cluster-reader
rules:
- apiGroups: [""]
  #
  # at the HTTP level, the name of the resource for accessing Secret
  # objects is "secrets"
  resources: ["secrets","persistentvolumes","nodes"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: expense-cluster-reader
subjects:
- kind: User
  name: harish # Name is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: expense-cluster-reader
  apiGroup: rbac.authorization.k8s.io
